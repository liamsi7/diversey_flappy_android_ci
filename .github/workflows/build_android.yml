name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 1) Android SDK (cmdline-tools)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 31
          cmdline-tools-version: latest

      # 2) Licenties + exacte packages (incl. NDK 25.1.8937393)
      - name: Accept licenses & install required packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-31" "build-tools;35.0.0" "ndk;25.1.8937393"

      # 3) Env-vars expliciet + PATH (aapt2/sdkmanager)
      - name: Export Android env (SDK/NDK)
        run: |
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROIDSDK=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROIDNDK=/usr/local/lib/android/sdk/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "PATH=/usr/local/lib/android/sdk/platform-tools:/usr/local/lib/android/sdk/build-tools/35.0.0:/usr/local/lib/android/sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      # 4) Compat shim: legacy tools/bin -> cmdline-tools/latest/bin
      - name: Create legacy tools/bin shim for sdkmanager
        run: |
          mkdir -p /usr/local/lib/android/sdk/tools/bin
          ln -sfn /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager /usr/local/lib/android/sdk/tools/bin/sdkmanager
          ln -sfn /usr/local/lib/android/sdk/cmdline-tools/latest/bin/avdmanager /usr/local/lib/android/sdk/tools/bin/avdmanager || true

      # 5) Link SDK/NDK naar Buildozerâ€™s interne paden
      - name: Link SDK/NDK into .buildozer tree
        run: |
          mkdir -p .buildozer/android/platform
          ln -sfn "/usr/local/lib/android/sdk" .buildozer/android/platform/android-sdk
          ln -sfn "/usr/local/lib/android/sdk/ndk/25.1.8937393" .buildozer/android/platform/android-ndk

      # 6) OS-deps + Buildozer + python-for-android (gepinnd) + AUTOTOOLS FIX
      - name: Install system deps & Buildozer
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            autoconf automake libtool libtool-bin pkg-config cmake m4 gettext texinfo gperf \
            libffi-dev libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev \
            libncurses5-dev libncursesw5-dev liblzma-dev \
            git zip unzip openjdk-17-jdk
          # Zorgen dat aclocal libtool-macros vindt
          echo "ACLOCAL_PATH=/usr/share/aclocal" >> $GITHUB_ENV
          python -m pip install --upgrade pip
          pip install cython==0.29.36 buildozer
          pip install "python-for-android==2024.1.21"

      # 7) (optioneel) assets genereren
      - name: Generate assets (optional)
        run: |
          python make_assets.py || true
          ls -la assets || true
          ls -la sounds || true

      # 8) Build APK
      - name: Build debug APK
        env:
          USE_SDK_WRAPPER: "1"
        run: |
          buildozer -v android debug

      # 9) Upload APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DiverseyFlappy-APK
          path: bin/*.apk

