name: Build Android APK

on:
  workflow_dispatch:          # handmatig starten via Actions
  push:
    branches: [ "main" ]      # ook automatisch bij commits op main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 1) Android SDK/NDK klaarzetten (NDK 25.x is stabiel met p4a)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 31
          ndk: 25.1.8937393
          cmdline-tools-version: latest

      # 2) Licenties accepteren + stabiele build-tools/platform installeren
      - name: Accept licenses & install required packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-31" "build-tools;35.0.0"

      # 3) Exporteer env en zorg dat aidl in PATH zit
      - name: Export Android env
        run: |
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "ANDROIDNDK=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/35.0.0:$PATH" >> $GITHUB_ENV

      # 4) Link vooraf ge√Ønstalleerde SDK/NDK naar Buildozer-paden
      - name: Link SDK/NDK into .buildozer tree
        run: |
          mkdir -p .buildozer/android/platform
          ln -sfn "$ANDROID_SDK_ROOT" .buildozer/android/platform/android-sdk
          ln -sfn "$ANDROID_NDK_HOME" .buildozer/android/platform/android-ndk

      # 5) OS dependencies + Buildozer (incl. autotools fixes)
      - name: Install system deps & Buildozer
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            autoconf automake libtool pkg-config cmake m4 gettext \
            libffi-dev libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev \
            libncurses5-dev libncursesw5-dev liblzma-dev \
            git zip unzip openjdk-17-jdk
          python -m pip install --upgrade pip
          pip install cython==0.29.36 buildozer

      # 6) (optioneel) assets genereren; faalt niet als Pillow ontbreekt
      - name: Generate assets (optional)
        run: |
          python make_assets.py || true
          ls -la assets || true
          ls -la sounds || true

      # 7) Build APK
      - name: Build debug APK
        env:
          USE_SDK_WRAPPER: "1"
        run: |
          buildozer -v android debug

      # 8) Upload APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DiverseyFlappy-APK
          path: bin/*.apk
