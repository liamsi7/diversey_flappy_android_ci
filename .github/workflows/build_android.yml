name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 1) Android SDK/NDK klaarzetten
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 31
          cmdline-tools-version: latest

      # 2) Licenties accepteren + vereiste packages (incl. NDK 25.1.8937393)
      - name: Accept licenses & install required packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-31" "build-tools;35.0.0" "ndk;25.1.8937393"

      # 3) Zet env-vars expliciet naar SDK + NDK 25.1.8937393 en zorg dat aidl in PATH zit
      - name: Export Android env (SDK/NDK)
        run: |
          echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROIDSDK=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROIDNDK=/usr/local/lib/android/sdk/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "PATH=/usr/local/lib/android/sdk/platform-tools:/usr/local/lib/android/sdk/build-tools/35.0.0:/usr/local/lib/android/sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      # 4) (optioneel) symlink SDK/NDK naar paden die Buildozer gebruikt
      - name: Link SDK/NDK into .buildozer tree
        run: |
          mkdir -p .buildozer/android/platform
          ln -sfn "/usr/local/lib/android/sdk" .buildozer/android/platform/android-sdk
          ln -sfn "/usr/local/lib/android/sdk/ndk/25.1.8937393" .buildozer/android/platform/android-ndk

      # 5) OS-deps + Buildozer (incl. autotools fixes)
      - name: Install system deps & Buildozer
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            autoconf automake libtool pkg-config cmake m4 gettext \
            libffi-dev libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev \
            libncurses5-dev libncursesw5-dev liblzma-dev \
            git zip unzip openjdk-17-jdk
          python -m pip install --upgrade pip
          pip install cython==0.29.36 buildozer

      # 6) (optioneel) assets genereren
      - name: Generate assets (optional)
        run: |
          python make_assets.py || true
          ls -la assets || true
          ls -la sounds || true

      # 7) Build APK â€” nu met juiste SDK/NDK paden
      - name: Build debug APK
        env:
          USE_SDK_WRAPPER: "1"
        run: |
          buildozer -v android debug

      # 8) Upload APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: DiverseyFlappy-APK
          path: bin/*.apk
