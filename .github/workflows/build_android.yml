name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Android SDK/NDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 31
          ndk: 25.1.8937393
          cmdline-tools-version: latest

      - name: Accept licenses & install SDK packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-31" "build-tools;35.0.0"

      - name: Export Android env
        run: |
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "ANDROIDNDK=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/35.0.0:$PATH" >> $GITHUB_ENV

      - name: Link SDK/NDK into .buildozer tree
        run: |
          mkdir -p .buildozer/android/platform
          ln -sfn "$ANDROID_SDK_ROOT" .buildozer/android/platform/android-sdk
          ln -sfn "$ANDROID_NDK_HOME" .buildozer/android/platform/android-ndk

      - name: Install system deps & Buildozer
        run: |
          sudo apt update
          sudo apt install -y git zip unzip openjdk-17-jdk autoconf automake libtool pkg-config cmake
          python -m pip install --upgrade pip
          pip install cython==0.29.36 buildozer

      # (optioneel) jouw asset-script; mag falen zonder de build te stoppen
      - name: Generate assets (optional)
        run: |
          python make_assets.py || true
          ls -la assets || true
          ls -la sounds || true

      # Schoon build + volledige log capture
      - name: Clean previous build
        run: |
          buildozer android clean || true

      - name: Build debug APK (capture logs)
        env:
          USE_SDK_WRAPPER: "1"
        run: |
          set -o pipefail
          buildozer -v android debug 2>&1 | tee buildozer_ci.log

      # APK uploaden
      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: DiverseyFlappy-APK
          path: bin/*.apk

      # ALTIJD de logs uploaden (ook bij failure)
      - name: Upload Buildozer logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-logs
          path: |
            buildozer_ci.log
            .buildozer/**/*.log
            .buildozer/android/platform/**/install*.txt
            .buildozer/android/platform/**/error*.txt
            .buildozer/android/platform/**/stdout*.txt
            .buildozer/android/platform/**/stderr*.txt
